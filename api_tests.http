### API Testing File for Rust Nexus Web Server
### Make sure the server is running on http://localhost:3000

# Variables
@baseUrl = http://localhost:3000
@contentType = application/json

### Health Check
GET {{baseUrl}}/health

###

### Create a new user
POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
    "name": "John Doe",
    "email": "john.doe@example.com"
}

###

### Create another user
POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
    "name": "Jane Smith",
    "email": "jane.smith@example.com"
}

###

### Test duplicate email (should return 409 Conflict)
POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
    "name": "John Clone",
    "email": "john.doe@example.com"
}

###

### Get all users
GET {{baseUrl}}/api/users

###

### Get user by ID (replace with actual UUID from create response)
# @name getUserById
GET {{baseUrl}}/api/users/550e8400-e29b-41d4-a716-446655440000

###

### Update user (replace with actual UUID from create response)
PUT {{baseUrl}}/api/users/550e8400-e29b-41d4-a716-446655440000
Content-Type: {{contentType}}

{
    "name": "John Updated",
    "email": "john.updated@example.com"
}

###

### Update user with partial data (name only)
PUT {{baseUrl}}/api/users/550e8400-e29b-41d4-a716-446655440000
Content-Type: {{contentType}}

{
    "name": "John Partially Updated"
}

###

### Update user with partial data (email only)
PUT {{baseUrl}}/api/users/550e8400-e29b-41d4-a716-446655440000
Content-Type: {{contentType}}

{
    "email": "john.partial@example.com"
}

###

### Test updating with existing email (should return 409 Conflict)
PUT {{baseUrl}}/api/users/550e8400-e29b-41d4-a716-446655440000
Content-Type: {{contentType}}

{
    "email": "jane.smith@example.com"
}

###

### Get user after update
GET {{baseUrl}}/api/users/550e8400-e29b-41d4-a716-446655440000

###

### Delete user (replace with actual UUID from create response)
DELETE {{baseUrl}}/api/users/550e8400-e29b-41d4-a716-446655440000

###

### Try to get deleted user (should return 404)
GET {{baseUrl}}/api/users/550e8400-e29b-41d4-a716-446655440000

###

### Try to delete non-existent user (should return 404)
DELETE {{baseUrl}}/api/users/00000000-0000-0000-0000-000000000000

###

### Error handling tests

### Test invalid JSON
POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
    "name": "Invalid User",
    "email": "invalid.email
}

###

### Test missing required fields
POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
    "name": "No Email User"
}

###

### Test empty request body
POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{}

###

### Test invalid UUID format
GET {{baseUrl}}/api/users/invalid-uuid-format

###

### Performance test - Create multiple users
POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
    "name": "User 1",
    "email": "user1@example.com"
}

###

POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
    "name": "User 2",
    "email": "user2@example.com"
}

###

POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
    "name": "User 3",
    "email": "user3@example.com"
}

###

### Get all users to see the list
GET {{baseUrl}}/api/users

###

### Cleanup - Delete test users (update UUIDs as needed)
# DELETE {{baseUrl}}/api/users/USER_ID_1
# DELETE {{baseUrl}}/api/users/USER_ID_2
# DELETE {{baseUrl}}/api/users/USER_ID_3
